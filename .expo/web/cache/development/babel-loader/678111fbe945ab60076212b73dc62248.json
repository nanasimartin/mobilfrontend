{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\n\nvar Jatek = function (_Component) {\n  _inherits(Jatek, _Component);\n\n  var _super = _createSuper(Jatek);\n\n  function Jatek(props) {\n    var _this;\n\n    _classCallCheck(this, Jatek);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: true,\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(Jatek, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      return fetch('http://172.16.0.124:3000/kerdesek').then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        _this2.setState({\n          isLoading: false,\n          dataSource: responseJson\n        }, function () {});\n      }).catch(function (error) {\n        console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            padding: 20\n          }\n        }, React.createElement(ActivityIndicator, null));\n      }\n\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          paddingTop: 20,\n          backgroundColor: 'lightgreen'\n        }\n      }, React.createElement(FlatList, {\n        data: this.state.dataSource,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, null, React.createElement(Text, {\n            style: {\n              color: \"brown\",\n              fontSize: 20,\n              textAlign: \"center\",\n              marginTop: 15,\n              marginBottom: 5\n            }\n          }, item.kerdesek_kerdes, \" \"));\n        },\n        keyExtractor: function keyExtractor(_ref2, index) {\n          var kerdesek_id = _ref2.kerdesek_id;\n          return kerdesek_id;\n        }\n      }));\n    }\n  }]);\n\n  return Jatek;\n}(Component);\n\nexport { Jatek as default };\nvar styles = StyleSheet.create({\n  kekgomb: {\n    alignItems: \"center\",\n    backgroundColor: \"blue\",\n    padding: 10,\n    width: 300,\n    marginLeft: \"auto\",\n    marginRight: \"auto\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Strix/Desktop/zaro/mobilfrontend/Jatek.js"],"names":["React","Component","Jatek","props","state","isLoading","dataSource","fetch","then","response","json","responseJson","setState","catch","error","console","flex","padding","paddingTop","backgroundColor","item","color","fontSize","textAlign","marginTop","marginBottom","kerdesek_kerdes","index","kerdesek_id","styles","StyleSheet","create","kekgomb","alignItems","width","marginLeft","marginRight"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;;;IAMqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,SAAS,EAAE,IADD;AAEVC,MAAAA,UAAU,EAAC;AAFD,KAAZ;AAFiB;AAQpB;;;;WAGD,6BAAmB;AAAA;;AACjB,aAAOC,KAAK,CAAC,mCAAD,CAAL,CACJC,IADI,CACC,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADD,EAEJF,IAFI,CAEC,UAACG,YAAD,EAAkB;AAEtB,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,SAAS,EAAE,KADC;AAEZC,UAAAA,UAAU,EAAEK;AAFA,SAAd,EAGG,YAAU,CAEZ,CALD;AASD,OAbI,EAcJE,KAdI,CAcE,UAACC,KAAD,EAAU;AACfC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,OAhBI,CAAP;AAiBD;;;WAMD,kBAAQ;AAEN,UAAG,KAAKV,KAAL,CAAWC,SAAd,EAAwB;AACtB,eACE,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACW,YAAAA,IAAI,EAAE,CAAP;AAAUC,YAAAA,OAAO,EAAE;AAAnB;AAAb,WACE,oBAAC,iBAAD,OADF,CADF;AAKD;;AAED,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACD,UAAAA,IAAI,EAAE,CAAP;AAAUE,UAAAA,UAAU,EAAC,EAArB;AAAyBC,UAAAA,eAAe,EAAC;AAAzC;AAAb,SACA,oBAAC,QAAD;AACE,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWE,UADnB;AAEE,QAAA,UAAU,EAAE;AAAA,cAAEc,IAAF,QAAEA,IAAF;AAAA,iBAEZ,oBAAC,IAAD,QACA,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAC,OAAP;AAAeC,cAAAA,QAAQ,EAAC,EAAxB;AAA2BC,cAAAA,SAAS,EAAC,QAArC;AAA8CC,cAAAA,SAAS,EAAC,EAAxD;AAA2DC,cAAAA,YAAY,EAAC;AAAxE;AAAb,aAA6FL,IAAI,CAACM,eAAlG,MADA,CAFY;AAAA,SAFd;AAcE,QAAA,YAAY,EAAE,6BAAgBC,KAAhB;AAAA,cAAEC,WAAF,SAAEA,WAAF;AAAA,iBAA0BA,WAA1B;AAAA;AAdhB,QADA,CADF;AAoBD;;;;EAlEkC3B,S;;SAAdC,K;AAqErB,IAAM2B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAEjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,QADL;AAEPd,IAAAA,eAAe,EAAE,MAFV;AAGPF,IAAAA,OAAO,EAAE,EAHF;AAIPiB,IAAAA,KAAK,EAAC,GAJC;AAKPC,IAAAA,UAAU,EAAC,MALJ;AAMPC,IAAAA,WAAW,EAAC;AANL;AAFwB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Text, TextInput, View, Image, ImageBackground, StyleSheet, ActivityIndicator, FlatList } from 'react-native';\r\n\r\n\r\n\r\n\r\nexport default class Jatek extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      isLoading: true,\r\n      dataSource:[]\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\ncomponentDidMount(){\r\n  return fetch('http://172.16.0.124:3000/kerdesek')\r\n    .then((response) => response.json())\r\n    .then((responseJson) => {\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        dataSource: responseJson,\r\n      }, function(){\r\n\r\n      });\r\n      \r\n\r\n\r\n    })\r\n    .catch((error) =>{\r\n      console.error(error);\r\n    });\r\n}\r\n\r\n\r\n \r\n  \r\n\r\nrender(){\r\n\r\n  if(this.state.isLoading){\r\n    return(\r\n      <View style={{flex: 1, padding: 20}}>\r\n        <ActivityIndicator/>\r\n      </View>\r\n    )\r\n  }\r\n\r\n  return(\r\n    <View style={{flex: 1, paddingTop:20, backgroundColor:'lightgreen'}}>\r\n    <FlatList\r\n      data={this.state.dataSource}\r\n      renderItem={({item}) => \r\n\r\n      <View >\r\n      <Text style={{color:\"brown\",fontSize:20,textAlign:\"center\",marginTop:15,marginBottom:5}}   >{item.kerdesek_kerdes} </Text>\r\n      \r\n\r\n     \r\n      </View>\r\n    \r\n    }\r\n\r\n    \r\n      keyExtractor={({kerdesek_id}, index) => kerdesek_id}\r\n    />\r\n  </View>\r\n);\r\n}\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\nkekgomb: {\r\n  alignItems: \"center\",\r\n  backgroundColor: \"blue\",\r\n  padding: 10,\r\n  width:300,\r\n  marginLeft:\"auto\",\r\n  marginRight:\"auto\",\r\n}\r\n});"]},"metadata":{},"sourceType":"module"}